¨%
vD:\EBSCO\GitHub\DotNET_Mentoring_Program_Advanced_2025\CatalogService.Infrastructure\Repositories\ProductRepository.cs
	namespace 	
CatalogService
 
. 
Infrastructure '
.' (
Repositories( 4
;4 5
public 
class 
ProductRepository 
:  
IProductRepository! 3
{		 
private

 
readonly

 
CatalogDbContext

 %
_context

& .
;

. /
public 

ProductRepository 
( 
CatalogDbContext -
context. 5
)5 6
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Product" )
>) *
>* +
GetProductsAsync, <
(< =
int= @
?@ A

categoryIdB L
,L M
intN Q
pageR V
,V W
intX [
pageSize\ d
)d e
{ 
var 
query 
= 
_context 
. 
Products %
.% &
Include& -
(- .
p. /
=>0 2
p3 4
.4 5
Category5 =
)= >
.> ?
AsQueryable? J
(J K
)K L
;L M
if 

( 

categoryId 
. 
HasValue 
)  
{ 	
query 
= 
query 
. 
Where 
(  
p  !
=>" $
p% &
.& '

CategoryId' 1
==2 4

categoryId5 ?
.? @
Value@ E
)E F
;F G
} 	
return 
await 
query 
. 
Skip 
(  
(  !
page! %
-& '
$num( )
)) *
*+ ,
pageSize- 5
)5 6
.6 7
Take7 ;
(; <
pageSize< D
)D E
.E F
ToListAsyncF Q
(Q R
)R S
;S T
} 
public 

async 
Task 
< 
Product 
? 
> 
GetByIdAsync  ,
(, -
int- 0
id1 3
)3 4
=>5 7
await 
_context 
. 
Products 
.  
Include  '
(' (
p( )
=>* ,
p- .
.. /
Category/ 7
)7 8
.8 9
FirstOrDefaultAsync9 L
(L M
pM N
=>O Q
pR S
.S T
IdT V
==W Y
idZ \
)\ ]
;] ^
public   

async   
Task   
AddAsync   
(   
Product   &
product  ' .
)  . /
{!! 
_context"" 
."" 
Products"" 
."" 
Add"" 
("" 
product"" %
)""% &
;""& '
await## 
_context## 
.## 
SaveChangesAsync## '
(##' (
)##( )
;##) *
}$$ 
public&& 

async&& 
Task&& 
UpdateAsync&& !
(&&! "
Product&&" )
product&&* 1
)&&1 2
{'' 
_context(( 
.(( 
Products(( 
.(( 
Update((  
(((  !
product((! (
)((( )
;(() *
await)) 
_context)) 
.)) 
SaveChangesAsync)) '
())' (
)))( )
;))) *
}** 
public,, 

async,, 
Task,, 
DeleteAsync,, !
(,,! "
int,," %
id,,& (
),,( )
{-- 
var.. 
product.. 
=.. 
await.. 
_context.. $
...$ %
Products..% -
...- .
	FindAsync... 7
(..7 8
id..8 :
)..: ;
;..; <
if// 

(// 
product// 
!=// 
null// 
)// 
{00 	
_context11 
.11 
Products11 
.11 
Remove11 $
(11$ %
product11% ,
)11, -
;11- .
await22 
_context22 
.22 
SaveChangesAsync22 +
(22+ ,
)22, -
;22- .
}33 	
}44 
}55 µ
wD:\EBSCO\GitHub\DotNET_Mentoring_Program_Advanced_2025\CatalogService.Infrastructure\Repositories\CategoryRepository.cs
	namespace 	
CatalogService
 
. 
Infrastructure '
.' (
Repositories( 4
;4 5
public 
class 
CategoryRepository 
:  !
ICategoryRepository" 5
{		 
private

 
readonly

 
CatalogDbContext

 %
_context

& .
;

. /
public 

CategoryRepository 
( 
CatalogDbContext .
context/ 6
)6 7
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Category" *
>* +
>+ ,
GetAllAsync- 8
(8 9
)9 :
=>; =
await 
_context 
. 

Categories !
.! "
Include" )
() *
c* +
=>, .
c/ 0
.0 1
SubCategories1 >
)> ?
.? @
ToListAsync@ K
(K L
)L M
;M N
public 

async 
Task 
< 
Category 
? 
>  
GetByIdAsync! -
(- .
int. 1
id2 4
)4 5
=>6 8
await 
_context 
. 

Categories !
.! "
Include" )
() *
c* +
=>, .
c/ 0
.0 1
SubCategories1 >
)> ?
.? @
FirstOrDefaultAsync@ S
(S T
cT U
=>V X
cY Z
.Z [
Id[ ]
==^ `
ida c
)c d
;d e
public 

async 
Task 
AddAsync 
( 
Category '
category( 0
)0 1
{ 
_context 
. 

Categories 
. 
Add 
(  
category  (
)( )
;) *
await 
_context 
. 
SaveChangesAsync '
(' (
)( )
;) *
} 
public 

async 
Task 
UpdateAsync !
(! "
Category" *
category+ 3
)3 4
{ 
_context 
. 

Categories 
. 
Update "
(" #
category# +
)+ ,
;, -
await   
_context   
.   
SaveChangesAsync   '
(  ' (
)  ( )
;  ) *
}!! 
public## 

async## 
Task## 
DeleteAsync## !
(##! "
int##" %
id##& (
)##( )
{$$ 
var%% 
category%% 
=%% 
await%% 
_context%% %
.%%% &

Categories%%& 0
.%%0 1
	FindAsync%%1 :
(%%: ;
id%%; =
)%%= >
;%%> ?
if&& 

(&& 
category&& 
!=&& 
null&& 
)&& 
{'' 	
_context(( 
.(( 

Categories(( 
.((  
Remove((  &
(((& '
category((' /
)((/ 0
;((0 1
await)) 
_context)) 
.)) 
SaveChangesAsync)) +
())+ ,
))), -
;))- .
}** 	
}++ 
},, ¤$
pD:\EBSCO\GitHub\DotNET_Mentoring_Program_Advanced_2025\CatalogService.Infrastructure\Context\CatalogDbContext.cs
	namespace 	
CatalogService
 
. 
Infrastructure '
.' (
Context( /
;/ 0
public 
class 
CatalogDbContext 
: 
	DbContext  )
{ 
public 

CatalogDbContext 
( 
DbContextOptions ,
<, -
CatalogDbContext- =
>= >
options? F
)F G
:H I
baseJ N
(N O
optionsO V
)V W
{X Y
}Z [
public

 

DbSet

 
<

 
Category

 
>

 

Categories

 %
=>

& (
Set

) ,
<

, -
Category

- 5
>

5 6
(

6 7
)

7 8
;

8 9
public 

DbSet 
< 
Product 
> 
Products "
=># %
Set& )
<) *
Product* 1
>1 2
(2 3
)3 4
;4 5
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
Entity 
< 
Category $
>$ %
(% &
)& '
.' (
ToTable( /
(/ 0
$str0 :
): ;
;; <
modelBuilder 
. 
Entity 
< 
Product #
># $
($ %
)% &
.& '
ToTable' .
(. /
$str/ 8
)8 9
;9 :
modelBuilder 
. 
Entity 
< 
Category $
>$ %
(% &
entity& ,
=>- /
{ 	
entity 
. 
Property 
( 
c 
=>  
c! "
." #
Name# '
)' (
. 

IsRequired 
( 
) 
. 
HasMaxLength 
(  
$num  "
)" #
;# $
entity 
. 
HasOne 
( 
c 
=> 
c  
.  !
ParentCategory! /
)/ 0
. 
WithMany 
( 
c 
=>  
c! "
." #
SubCategories# 0
)0 1
. 
HasForeignKey  
(  !
c! "
=># %
c& '
.' (
ParentCategoryId( 8
)8 9
. 
OnDelete 
( 
DeleteBehavior *
.* +
Restrict+ 3
)3 4
;4 5
} 	
)	 

;
 
modelBuilder 
. 
Entity 
< 
Product #
># $
($ %
entity% +
=>, .
{   	
entity!! 
.!! 
Property!! 
(!! 
p!! 
=>!!  
p!!! "
.!!" #
Name!!# '
)!!' (
."" 

IsRequired"" 
("" 
)"" 
.## 
HasMaxLength## 
(##  
$num##  "
)##" #
;### $
entity%% 
.%% 
Property%% 
(%% 
p%% 
=>%%  
p%%! "
.%%" #
Price%%# (
)%%( )
.&& 
HasColumnType&&  
(&&  !
$str&&! 0
)&&0 1
;&&1 2
entity(( 
.(( 
Property(( 
((( 
p(( 
=>((  
p((! "
.((" #
Amount((# )
)(() *
.)) 

IsRequired)) 
()) 
))) 
;))  
entity++ 
.++ 
HasOne++ 
(++ 
p++ 
=>++ 
p++  
.++  !
Category++! )
)++) *
.,, 
WithMany,, 
(,, 
c,, 
=>,,  
c,,! "
.,," #
Products,,# +
),,+ ,
.-- 
HasForeignKey--  
(--  !
p--! "
=>--# %
p--& '
.--' (

CategoryId--( 2
)--2 3
;--3 4
}.. 	
)..	 

;..
 
}// 
}00 