{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25155.17 (398aa319)",
        "semanticVersion": "4.13.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Name' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ImageURL' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ImageAltText' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Key' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/CartDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/CartDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Key' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Entities/Cart.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 16,
                  "endLine": 11,
                  "endColumn": 20
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Entities/Cart.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 23,
                  "endLine": 8,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_queueUrl' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 16,
                  "endLine": 21,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 24,
                  "endLine": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0472",
          "level": "warning",
          "message": "The result of the expression is always 'false' since a value of type 'decimal' is never equal to 'null' of type 'decimal?'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 66,
                  "endLine": 85,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 22,
                  "endLine": 153,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Swagger/ConfigureSwaggerOptions.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'ConfigureSwaggerOptions' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Swagger/ConfigureSwaggerOptions.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Swagger/SwaggerDefaultValues.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'SwaggerDefaultValues' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Swagger/SwaggerDefaultValues.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 5,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'CartDAO' to match pascal case naming rules, consider using 'CartDao'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/CartDAO.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename interface 'ICartDAO' to match pascal case naming rules, consider using 'ICartDao'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/Interfaces/ICartDAO.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 22,
                  "endLine": 5,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_context' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/CartDAO.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 38,
                  "endLine": 10,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'database' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/LiteDBUnitOfWork.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_logger' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Controllers/CartV2Controller.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 52,
                  "endLine": 15,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_logger' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Controllers/CartV1Controller.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 52,
                  "endLine": 15,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/LiteDBUnitOfWork.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/LiteDBUnitOfWork.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/LiteDBUnitOfWork.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 21,
                  "endLine": 52,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'LiteDBUnitOfWork' or mark the type as 'sealed'.",
              "1": "'LiteDBUnitOfWork.Dispose()' should also call 'Dispose(true)'."
            }
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 20,
                  "endLine": 5,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 24,
                  "endLine": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DTOs/ItemDto.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/CartDAO.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 23,
                  "endLine": 39,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/CartDAO.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 23,
                  "endLine": 49,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/CartDAO.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 23,
                  "endLine": 60,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/DAL/CartDAO.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 23,
                  "endLine": 65,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3923",
          "level": "warning",
          "message": "Remove this conditional structure or edit its code blocks so that they're not all the same.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 5,
                  "endLine": 143,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 39,
                  "endLine": 35,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 60,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 38,
                  "endLine": 60,
                  "endColumn": 40
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 25,
                  "endLine": 79,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 25,
                  "endLine": 85,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 63,
                  "endLine": 85,
                  "endColumn": 65
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 21,
                  "endLine": 102,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+1",
              "8": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "ASP0015",
          "level": "note",
          "message": "The header 'Authorization' can be accessed using the Authorization property",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Middleware/TokenLoggingMiddleware.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 25,
                  "endLine": 18,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderName": "Authorization",
              "ResolvedPropertyName": "Authorization"
            }
          }
        },
        {
          "ruleId": "CA2016",
          "level": "note",
          "message": "Forward the 'stoppingToken' parameter to the 'GetQueueUrlAsync' method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 38,
                  "endLine": 40,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ArgumentName": "stoppingToken",
              "ParameterName": null,
              "ShouldFix": "1"
            }
          }
        },
        {
          "ruleId": "CA1869",
          "level": "note",
          "message": "Avoid creating a new 'JsonSerializerOptions' instance for every serialization operation. Cache and reuse instances instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Listeners/CatalogItemUpdateListener.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 29,
                  "endLine": 77,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(desc => desc.GroupName))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 30,
                  "endLine": 124,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 36,
                  "endLine": 63,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1861",
          "level": "note",
          "message": "Prefer 'static readonly' fields over constant array arguments if the called method is called repeatedly and is not mutating the passed array",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 13,
                  "endLine": 86,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "paramName": "value"
            }
          }
        },
        {
          "ruleId": "ASP0025",
          "level": "note",
          "message": "Use AddAuthorizationBuilder to register authorization services and construct policies",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 1,
                  "endLine": 110,
                  "endColumn": 3
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await RunAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/EBSCO/GitHub/DotNET_Mentoring_Program_Advanced_2025/CartingService/Program.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 1,
                  "endLine": 151,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "ASP0015": {
          "id": "ASP0015",
          "shortDescription": "Suggest using IHeaderDictionary properties",
          "defaultLevel": "note",
          "helpUri": "https://aka.ms/aspnet/analyzers",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "ASP0025": {
          "id": "ASP0025",
          "shortDescription": "Use AddAuthorizationBuilder",
          "defaultLevel": "note",
          "helpUri": "https://aka.ms/aspnet/analyzers",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "CA1050": {
          "id": "CA1050",
          "shortDescription": "Declare types in namespaces",
          "fullDescription": "Types are declared in namespaces to prevent name collisions and as a way to organize related types in an object hierarchy.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1861": {
          "id": "CA1861",
          "shortDescription": "Avoid constant arrays as arguments",
          "fullDescription": "Constant arrays passed as arguments are not reused when called repeatedly, which implies a new array is created each time. Consider extracting them to 'static readonly' fields to improve performance if the passed array is not mutated within the called method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1861",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1869": {
          "id": "CA1869",
          "shortDescription": "Cache and reuse 'JsonSerializerOptions' instances",
          "fullDescription": "Avoid creating a new 'JsonSerializerOptions' instance for every serialization operation. Cache and reuse instances instead. Single use 'JsonSerializerOptions' instances can substantially degrade the performance of your application.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1869",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2016": {
          "id": "CA2016",
          "shortDescription": "Forward the 'CancellationToken' parameter to methods",
          "fullDescription": "Forward the 'CancellationToken' parameter to methods to ensure the operation cancellation notifications gets properly propagated, or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2016",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0472": {
          "id": "CS0472",
          "shortDescription": "The result of the expression is always the same since a value of this type is never equal to 'null'",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0472)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hard-coding a URI makes it difficult to test a program for a variety of reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General or reserved exceptions should never be thrown",
          "fullDescription": "This rule raises an issue when a general or reserved exception is thrown.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3923": {
          "id": "S3923",
          "shortDescription": "All branches in a conditional structure should not have exactly the same implementation",
          "fullDescription": "Having all branches of a switch or if chain with the same implementation indicates a problem.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3923",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields which are written but never read are a case of \"dead store\". Changing the value of such a field is useless and most probably indicates an error in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6964": {
          "id": "S6964",
          "shortDescription": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "fullDescription": "\"Under-posting\" refers to a situation where a client sends less data than expected to the server during an HTTP request, for example when the client omits some properties from the request body that the server expects to receive.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6964",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}